name: CI

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ master ]
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Use Node
      uses: actions/setup-node@v1
      with:
        node-version: 12
    - name: Build App
      run: |
        cd online.codingblocks.com
        yarn install --frozen-lockfile
        yarn build:prod
      
    - name: Deploying to production
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        script: | 
          cd ~/frontends/amoeba-frontpages-prod/online.codingblocks.com && \
          git checkout master && \
          git fetch --all --prune && \
          git reset --hard origin/master && \
          git pull && \
            ulimit -S -n 65000 && \
            nvm use && \
          yarn install --frozen-lockfile && yarn build:prod && \
          nvm use 12 && \
          NODE_ENV=production pm2 restart amoeba-frontpages-production

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v1
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-